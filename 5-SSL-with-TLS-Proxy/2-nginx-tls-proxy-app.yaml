apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-tls-proxy
  namespace: helloworld
data:
  nginx.conf: |
    events {
    }
    
    http {

      server {
          listen       80;
          listen       [::]:80;
          server_name  _;
          root         /usr/share/nginx/html;

          # Load configuration files for the default server block.
          include /etc/nginx/default.d/*.conf;

          error_page 404 /404.html;
          location = /404.html {
          }

          error_page 500 502 503 504 /50x.html;
          location = /50x.html {
          }

          location /health {
            return 200 "Healthy!";
          }
      }

      # server {
      #   listen 443 ssl;
      #   server_name your_domain.com;
      #   ssl_certificate /etc/nginx/certs/certificate.crt;
      #   ssl_certificate_key /etc/nginx/certs/private.key;
      #   location / {
      #     proxy_pass http://your_backend_service;
      #   }
      # }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-tls-proxy
  namespace: helloworld
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-tls-proxy
  template:
    metadata:
      labels:
        app: nginx-tls-proxy
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        # - name: tls-proxy-cert
        #   mountPath: /etc/nginx/certs
        #   readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      # - name: tls-proxy-cert
      #   secret:
      #     secretName: tls-proxy-cert
      - name: nginx-config
        configMap:
          name: nginx-tls-proxy
          items:
          - key: nginx.conf
            path: nginx.conf

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-tls-proxy
  namespace: helloworld
spec:
  selector:
    app: nginx-tls-proxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  # type: LoadBalancer
